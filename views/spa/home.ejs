<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/public/spa/style.css">
</head>

<body>

    <div class="container">
        <!-- table container -->
        <div class="data">
            <form class="search">
                <p><input type="text" name="search" autofocus id="search" placeholder="Enter details for search"></p>
                <p><input type="submit" id="submit" value="Search"></p>
            </form>
            <div class="table-data">

            </div>

            <div class="pagination">
                <button id="prev">prev</button>
                <p id="page"></p>
                <button id="next">next</button>
            </div>
        </div>
    </div>

    <script>

        const fetchData = async () => {
            let data = await fetch(`https://jsonplaceholder.typicode.com/posts`, {
                method: "GET",
                headers: {
                    "Content-type": "application/json"
                }
            })

            data = await data.json();
            return data;
        }

        let globalValue ;
        // get posts data per page
        const getPosts = async (data,page = 1) => {
            let dataPerPage = 10;
            let offset = (page - 1) * 10;
            if(page == 1){
                prev.setAttribute('disabled','true')
            }
            d = data.slice(offset, offset + dataPerPage);
            // console.log(d)
            d = d.map((post) => {
                return `<tr>
                            <td>${post.userId}</td>
                            <td>${post.id}</td>
                            <td>${post.title}</td>
                            <td>${post.body}</td>
                            <td><a href="/spa/postDetails/${post.id}">View</a></td>
                        </tr>`;
            })

            let table = `<table border = 1>
                         <tr class="header">
                             <td>UserID</td>
                             <td>PostID</td>
                             <td>Title</td>
                             <td>Content</td>
                             <td>view</td>
                         </tr>`+ d.join("") + `</table>`;


            let div = document.querySelector('.table-data');
            div.innerHTML = table;
            document.getElementById('page').innerHTML = page;
        }

        // pagination
        let next = document.getElementById('next');
        let prev = document.getElementById('prev');

        prev.addEventListener('click', () => {
            let prevpage = document.getElementById('page');
            page = Number(prevpage.innerHTML);
            if (page > 1) {
                page = page - 1
                getPosts(globalValue,page);

                if (next.hasAttribute('disabled')) {
                    next.removeAttribute('disabled')
                }
            }
            if (page == 1) {
                prev.setAttribute('disabled', 'true');
            }
        })


        next.addEventListener('click', () => {
            let nextpage = document.getElementById('page');
            let page = Number(nextpage.innerHTML);


            if (page < Math.ceil(globalValue.length / 10)) {
                page = page + 1;
                getPosts(globalValue,page);

                if (prev.hasAttribute('disabled')) {
                    prev.removeAttribute('disabled')
                }
            }
            if (page == Math.ceil(globalValue.length / 10)) {
                next.setAttribute('disabled', 'true');
            }
        })


        // search
        let submit = document.getElementById("submit");
        let search = document.getElementById("search");
        submit.addEventListener("click",(e)=>{
            e.preventDefault();
            if(next.hasAttribute('disabled')){
                    next.removeAttribute('disabled')
                }
            if(search.value !== ""){
                let value = search.value.toLowerCase();
                
                let d = data.filter((dt)=>{
                    return dt.userId == value || dt.id == value || dt.title.includes(value) || dt.body.includes(value)
                })
                globalValue = d;
                if(d.length>0){
                    getPosts(d)
                }else{
                    let div = document.querySelector('.table-data');
                     div.innerHTML = "Data Not Found For Given Search";
                     document.querySelector('.pagination').style.display = "none";
                }
            }
            else{
                globalValue = data;
                getPosts(data)
            }
        })

        var data;
        ; (
            async function call() {
                data = await fetchData();
                globalValue = data;
                getPosts(data,1);
            }
        )();
    </script>
</body>

</html>